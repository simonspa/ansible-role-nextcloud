---

- name: Install unzip
  package:
    name: unzip
    state: present
  when: download_file_type == '.zip'

- name: Install imagemagick
  package:
    name: imagemagick

- name: Check if nextcloud is already installed
  stat:
    path: "{{ nextcloud_installation_dir }}/updater/updater.phar"
  register: _result

- name: Check if update is available
  command: php updater/updater.phar
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  become: true
  become_user: "{{ nextcloud_file_owner }}"
  register: _result
  changed_when: false
  failed_when:
    - _result is failed
    # The updater will automatically try to install any updates if the shell is
    # not interactive (as is the case with here). In that case, it means that
    # Nextcloud has already been installed and an update was found. Assuming
    # that Nextcloud was installed with this role, .htaccess will no be
    # writtable. This will cause the updater to fail. But this is a failure we
    # can expect.
    - _result.stdout is not search('The following places can not be written to')
  when: _result.stat.exists | bool

- name: Download nextcloud
  unarchive:
    src: "{{ nextcloud_download_url }}"
    dest: "{{ nextcloud_installation_parent_dir }}"
    remote_src: true
    owner: "{{ nextcloud_file_owner }}"
    group: "{{ nextcloud_file_owner }}"
  register: _result
  when: >-
    _result is skipped
    or _result.stdout is not search("No update available")

- block:
    # When extracting the downloaded nextcloud archive, the files are placed
    # under a nextcloud folder. Here, we rename this folder if the user has
    # specified a different folder.
    - name: Move nextcloud folder
      command: >-
        mv
          "{{ nextcloud_installation_parent_dir }}/nextcloud"
          "{{ nextcloud_installation_dir }}"
      when:
        - _result is not skipped
        - nextcloud_installation_dir | basename != "nextcloud"

    - name: Create nextcloud data folder
      file:
        path: "{{ nextcloud_data_dir }}"
        state: directory
        owner: "{{ nextcloud_file_owner }}"
        group: "{{ nextcloud_file_owner }}"
        mode: 0o750

    - name: Install nextcloud
      command: >-
        php occ maintenance:install --no-interaction
          --database "{{ nextcloud_database.backend }}"
          --database-name "{{ nextcloud_database.name }}"
          --database-user "{{ nextcloud_database.user }}"
          --database-pass "{{ nextcloud_database.pass }}"
          --database-host "{{ nextcloud_database.host }}"
          --database-port "{{ nextcloud_database.port }}"
          --database-table-prefix "{{ nextcloud_database.prefix }}"
          --admin-user "{{ nextcloud_admin_user }}"
          --admin-pass "{{ nextcloud_admin_pass }}"
          --data-dir "{{ nextcloud_data_dir }}"
      args:
        chdir: "{{ nextcloud_installation_dir }}"
        creates: "{{ nextcloud_installation_dir }}/config/config.php"
      become: true
      become_user: "{{ nextcloud_file_owner }}"
      notify: nextcloud set secure file permissions

    - name: Make occ executable
      file:
        path: "{{ nextcloud_installation_dir }}/occ"
        mode: "u+x"

  when: _result is not skipped
